section
  h3(id='executable') express(1)을 사용하여 애플리케이션 생성하기

  p.
    Express팀은 프로젝트 시작을 위해서 <code>express(1)</code>이라는 손쉽고 빠른 생성기를 사용합니다.
    express 생성기와 npm를 global로 설치하면 어디서든 사용 할 수 있습니다.

  +js.
    $ npm install -g express-generator

  p.
    이 툴은 애플리케이션 골격을 만들기 위한 간단한 방법을 제공하지만, 적은 수의 엔진 템플릿을 지원 하는 등 제한적인 범위를 제공하기도 합니다.
    그러나 반대로 Express는 이 자체로 노드를 위해 설계된 가상 템플릿 엔진도 지원합니다. <code>--help</code>를 확인해보세요.

  +js.

    Usage: express [options]

    Options:

      -h, --help          output usage information
      -V, --version       output the version number
      -e, --ejs           add ejs engine support (defaults to jade)
      -H, --hogan         add hogan.js engine support
      -c, --css <engine>  add stylesheet <engine> support (less|stylus|compass) (defaults to plain css)
      -f, --force         force on non-empty directory

  p.
    만일 Jade와 Stylus를 지원하는 애플리케이션을 생성하고 싶다면, 아래대로 실행해보세요.

  +js.
    $ express --css stylus myapp

    create : myapp
    create : myapp/package.json
    create : myapp/app.js
    create : myapp/public
    create : myapp/public/javascripts
    create : myapp/public/images
    create : myapp/public/stylesheets
    create : myapp/public/stylesheets/style.styl
    create : myapp/routes
    create : myapp/routes/index.js
    create : myapp/views
    create : myapp/views/index.jade
    create : myapp/views/layout.jade

    install dependencies:
      $ cd myapp && npm install

    run the app:
      $ DEBUG=myapp node app

  p.
    그 후, 다른 노드 애플리케이션들과 마찬가지로 의존성 모듈들을 설치해야 합니다.

  +js.
    $ cd myapp
    $ npm install

  p.
   이제, 작동시켜 봅시다!

  +js.
    $ npm start

  p.
    이정도로 간단한 애플리케이션을 만들고 실행 시킬 수 있습니다. 
    Express는 특정 디렉토리 구조에 제한되지 않지만, 간단한 기준은 있다는 것을 명심하세요.
    다른 애플리케이션 구조들을 보려면, github repo의 <a href="https://github.com/visionmedia/express/tree/master/examples">examples</a>
    를 참고하시기 바랍니다.

