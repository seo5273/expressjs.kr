section
  h3(id='res.redirect') res.redirect([status], url)
  p.
    설정한 <code>url</code>로 redirect합니다.
    추가로 <code>status</code>코드를 지정할 수 있습니다. 기본값은 302 "Found" 입니다.

  +js.
    res.redirect('/foo/bar');
    res.redirect('http://example.com');
    res.redirect(301, 'http://example.com');
    res.redirect('../login');

  p.
    Express는 여러 형태의 redirect를 지원합니다. 다른 사이트로 redirect하려면 완전한 도메인을 입력하면 됩니다.

  +js.
    res.redirect('http://google.com');

  p.
    상대경로를 입력하면, 현재 도메인에서 해당 경로로 이동합니다.
    예를 들어 당신이 현재 <code>http://example.com/admin/post/new</code>에 있고
    아래와 같이 <code>/admin</code>로 redirect를 설정하면, <code>http://example.com/admin</code>로 이동합니다.
    
  +js.
    res.redirect('/admin');

  p.
    맨 앞에 "/"를 붙히지 않으면 현재 경로에서 상대적인 경로를 찾아 이동합니다.
    예를 들어, 현재 <code>/blog</code>에 위치하고 있다면, <code>admin/post/new</code>를 입력할 경우 <code>http://example.com/blog/admin/post/new</code>로 이동합니다.


  +js.
    res.redirect('admin/post/new');
  
  p.
    마찬가지로 한단계 상위의 경로에 접근하기 위해서는 아래와 같이 설정하면 됩니다.
    만약 현재 <code>http://example.com/admin/post/new</code>에 있다면 <code>http//example.com/admin/post</code>로 이동합니다.

  +js.
    res.redirect('..');

  p. 
    마지막으로 특별한 설정인 <code>back</code>입니다.
    Referer (혹은 Referrer)로 다시 이동하며,
    Referer가 지정되어 있지 않을 때는 <code>/</code>로 이동합니다.
 
  +js.
    res.redirect('back');
  
    
