section
  h3(id='app.VERB') app.VERB(path, [callback...], callback)

  p.
    <code>app.post()</code>와 같은 <code>app.VERB()</code> 메소드들은 앱의 각 <strong>VERB</strong>들에 대한 라우팅 기능을 제공합니다.

  p.
    아래는 가능한 가장 단순한 정의를 보여줍니다.
    Express는 경로를 정규식으로 변환하며 이를 통해 요청을 정의된 라우터와 매치시킵니다.
    참고로 쿼리 문자열은 이러한 매치를 수행하는 데 고려되지 <em>않습니다.</em>
    예를 들어 "GET /"와 "GET /?name=tobi" 둘 다 이하 예제에서 라우트를 매칭시킵니다.    

  +js.
    app.get('/', function(req, res){
      res.send('hello world');
    });

  p.
    경로로는 정규식 또한 사용할 수 있습니다.

  +js.
    app.get(/^\/commits\/(\w+)(?:\.\.(\w+))?$/, function(req, res){
      var from = req.params[0];
      var to = req.params[1] || 'HEAD';
      res.send('commit range ' + from + '..' + to);
    });

  p.
    여러 콜백들을 넘길 수 있으며, 이를 통해 유효성 검사 등을 먼저 수행하는것과 같은 구성이 가능합니다.

  +js.
    app.get('/user/:id', user.load, function(){
      // ... 
    })

  p.
    라우트 하나에 공통으로 사용되는 여러가지 미들웨어가 있다면, <code>all</code>를 이용하여 이를 수행할 수 있습니다.

  +js.
    var middleware = [loadForum, loadThread];

    app.route('/forum/:fid/thread/:tid')
    .all(loadForum)
    .all(loadThread)
    .get(function() { //... });
    .post(function() { //... });

  p.
    위 예제는 GET이나 POST 요청이 오면 loadForum와 loadThread 미들웨어가 함께 실행되는 예제입니다. 
