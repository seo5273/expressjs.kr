section
  h3(id='res.jsonp') res.jsonp([body])
  
  p.
    이 메소드는 <code>res.json()</code>과 동일하나, jsonp 스타일의 callback을 지원합니다.
    아래 예제는 <code>res.json()</code>과 동일한 역할을 하는 모습입니다.

  +js.
    res.jsonp(null)
    // => null

    res.jsonp({ user: 'tobi' })
    // => { "user": "tobi" }

    res.status(500).jsonp({ error: 'message' })
    // => { "error": "message" }

  p.
    기본적으로, callback 파라미터의 이름은 단순히 <code>callback</code>이지만,
    이는 <a href="#app-settings">jsonp callback name</a> 설정으로 변경할 수 있습니다.
    아래는 callback 파라미터를 넘길때 jsonp로 응답하는 모습을 보여줍니다.

  +js.
    // ?callback=foo
    res.jsonp({ user: 'tobi' })
    // => foo({ "user": "tobi" })

    app.set('jsonp callback name', 'cb');

    // ?cb=foo
    res.status(500).jsonp({ error: 'message' })
    // => foo({ "error": "message" })
    