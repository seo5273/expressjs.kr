section
  h3(id='router.route') router.route(path)

  p.
    라우트 인스턴스를 반환합니다.
    여기에 메소드 체인 형식으로 여러가지 미들웨어를 달 수 있습니다.
    이는 같은 이름으로 중복해서 정의하는 라우트들이 있을 때 유용하게 사용됩니다.

  +js.
    var router = express.Router();

    router.param('user_id', function(req, res, next, id) {
      // sample user, would actually fetch from DB, etc...
      req.user = {
        id: id,
        name: 'Hanul'
      };
      next();
    });

    router.route('/users/:user_id')
    .all(function(req, res, next) {
      // runs for all HTTP verbs first
      // think of it as route specific middleware!
    })
    .get(function(req, res, next) {
      res.json(req.user);
    })
    .put(function(req, res, next) {
      // just an example of maybe updating the user
      req.user.name = req.params.name;
      // save user ... etc
      res.json(req.user);
    })
    .post(function(req, res, next) {
      next(new Error('not implemented'));
    })
    .delete(function(req, res, next) {
      next(new Error('not implemented'));
    })
